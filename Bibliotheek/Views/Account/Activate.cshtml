@model Bibliotheek.Models.ActivateModel
@{
    ViewBag.Title = "Activeren";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="span8 page-content">

    <article class="type-page hentry clearfix">
        <h1 class="post-title">
            <a href="#">Activeer account</a>
        </h1>
        <hr>
    </article>
    @using (Html.BeginForm("Activate", "Account",
        new { ViewBag.ReturnUrl },
        FormMethod.Post, new { @id = "contact-form", @class = "row" }))
    {
        <div class="span2">
            @Html.LabelFor(model => model.Firstname)
        </div>
        <div class="span6">
            @Html.TextBoxFor(model => model.Firstname, new { @class = "input-xlarge", disabled = "disabled" })
        </div>

        <div class="span2">
            @Html.LabelFor(model => model.Inclusion)
        </div>
        <div class="span6">
            @Html.TextBoxFor(model => model.Inclusion, new { @class = "input-xlarge", disabled = "disabled" })
        </div>

        <div class="span2">
            @Html.LabelFor(model => model.Lastname)
        </div>
        <div class="span6">
            @Html.TextBoxFor(model => model.Lastname, new { @class = "input-xlarge", disabled = "disabled" })
        </div>

        <div class="span2">
            @Html.LabelFor(model => model.Mail)
        </div>
        <div class="span6">
            @Html.TextBoxFor(model => model.Mail, new { @class = "input-xlarge", type = "email", disabled = "disabled" })
            <span id="returnData"></span>
        </div>

        <div class="span2">
            @Html.LabelFor(model => model.PostalCode)
        </div>
        <div class="span6">
            @Html.TextBoxFor(model => model.PostalCode, new { @class = "input-xlarge" })
            @Html.ValidationMessageFor(model => model.PostalCode)
            <span id="postalCodeData"></span>
        </div>

        <div class="span2">
            @Html.LabelFor(model => model.HouseNumber)
        </div>
        <div class="span6">
            @Html.TextBoxFor(model => model.HouseNumber, new { @class = "input-xlarge" })
            @Html.ValidationMessageFor(model => model.HouseNumber)
        </div>

        <div class="span2">
            @Html.LabelFor(model => model.Gender)
        </div>
        <div class="span6 margin15">
            @Html.RadioButtonFor(model => model.Gender, 0, new { id = "Gender0" }) @Html.LabelFor(model => model.Gender, " Man", new { @for = "Gender0" }) <br />
            @Html.RadioButtonFor(model => model.Gender, 1, new { id = "Gender1" }) @Html.LabelFor(model => model.Gender, " Vrouw", new { @for = "Gender1" })
        </div>

        <div class="span2">
            @Html.LabelFor(model => model.Dob)
        </div>
        <div class="span6">
            @Html.EditorFor(model => model.Dob, new { @class = "input-xlarge" })
            @Html.ValidationMessageFor(model => model.Dob)
        </div>

        <div class="span2">
            @Html.LabelFor(model => model.Password)
        </div>
        <div class="span6">
            @Html.PasswordFor(model => model.Password, new { @class = "input-xlarge" })
            @Html.ValidationMessageFor(model => model.Password)
        </div>

        <div class="span2">
            @Html.LabelFor(model => model.Password)
        </div>
        <div class="span6">
            @Html.PasswordFor(model => model.Password, new { id = "Password2", @class = "input-xlarge" })
            @Html.ValidationMessageFor(model => model.Password)
            <span id="passwordData"></span>
        </div>

        <div class="span6 offset2 bm30">
            <input type="submit" name="submit" value="Update" class="btn btn-inverse" disabled>
            <img src="../../Images/loading.gif" id="contact-loader" alt="Laden...">
        </div>

        <div class="span6 offset2 error-container"></div>
        <div class="span8 offset2" id="message-sent"></div>
    }
</div>

<aside class="span4 page-sidebar">
    @Html.Partial("_NewBook")
</aside>

@section scripts {
    <script type="text/javascript">
        var postalCodeCheck = false;
        var passwordCheck = false;

        function disableEnable() {
            if (postalCodeCheck && passwordCheck && $('#HouseNumber').val() != "" && $('#Firstname').val() != "") {
                $("input[type=submit]").removeAttr("disabled");
            } else {
                $("input[type=submit]").attr("disabled", "disabled");
            }
        }

        function checkPostal() {
            var postalCode = $('#PostalCode').val();
            if (postalCode.length == 6 || postalCode.length == 7) {
                $("#postalCodeData").html("");
                postalCodeCheck = true;
            } else {
                $("#postalCodeData").html("Dit is geen geldige postcode");
                postalCodeCheck = false;
            }
        }

        function checkPassword() {
            var password = $('#Password').val();
            var password2 = $('#Password2').val();
            if (password == password2 && password != "") {
                $("#passwordData").html("");
                passwordCheck = true;
            } else if (password != "" && password2 != "") {
                $("#passwordData").html("De wachtwoorden komen niet overeen");
                passwordCheck = false;
            } else {
                passwordCheck = false;
            }
        }

        $('input').keyup(function () {
            checkPostal();
            checkPassword();
            disableEnable();
        });

        $('input').change(function () {
            checkPostal();
            checkPassword();
            disableEnable();
        });
    </script>
}